[
  {
    "key": "cmd+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+'",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.navigateBack",
    "when": ""
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.navigateForward",
    "when": ""
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "backspace",
    "command": "-markdown.extension.onBackspaceKey",
    "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "sideBarFocus || terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "sideBarFocus || terminalFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "sideBarFocus || terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "sideBarFocus || terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inProjectManagerList || inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inProjectManagerList || inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "vscode-neovim.send",
    "key": "alt+j",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<A-j>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "alt+k",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<A-k>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "alt+h",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<A-h>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "alt+l",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<A-l>"
  },
  {
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!editorTextFocus && !terminalFocus && !inputFocus"
  },
  {
    "key": "space f f",
    "command": "workbench.action.quickOpen",
    "when": "!editorTextFocus && !terminalFocus && !inputFocus"
  },
  {
    "key": "space f w",
    "command": "workbench.action.findInFiles",
    "when": "!editorTextFocus && !terminalFocus && !inputFocus"
  },
  {
    "key": "space f r",
    "command": "workbench.action.openRecent",
    "when": "!editorTextFocus && !terminalFocus && !inputFocus"
  },
  {
    "key": "space f p",
    "command": "projectManager.listProjects",
    "when": "!editorTextFocus && !terminalFocus && !inputFocus"
  },
  {
    "key": "space g g",
    "command": "lazygit-vscode.toggle",
    "when": "!editorTextFocus && !terminalFocus && !inputFocus"
},
{
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
        "text": "\\\r\n"
    },
    "when": "terminalFocus"
}
]
